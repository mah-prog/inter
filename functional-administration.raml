#%RAML 1.0

title: API-Vitam - Administration Management
version: v1
baseUri: https://api.vitam.gouv.fr/admin-external/{version}
protocols: [ HTTPS ]

uses:
  StandardTypes: libraries/StandardTypes.raml
  AccessTypes: libraries/AccessTypes.raml
  StandardTraits: libraries/StandardTraits.raml
  AdminTraits: libraries/AdminTraits.raml
  IngestTypes: libraries/IngestTypes.raml
  IngestTraits: libraries/IngestTraits.raml
  DslTypes: libraries/DslTypes.raml
  AdminTypes: libraries/AdminTypes.raml

mediaType: application/json

types:
  _reserved:
    type: string

documentation:
  - title: Avertissements
    content: !include docs-fr/avertissement.md

  - title: Licence
    content: !include docs-fr/license.md

  - title: API Registre des fonds
    content: !include docs-fr/access-register.md

  - title: API Administration
    content: !include docs-fr/admin-functional.md

/formats:
  displayName: FileFormats
  description: |
   API qui définit les requêtes pour accéder au référentiel des Formats.
   La requête utilise le langage de requête (DSL) de Vitam en entrée et retourne une liste de formats selon le DSL Vitam en cas de succès.
  get:
    description: |
      Requête qui retourne des résultats contenant des Formats.
      La requête utilise le langage de requête DSL de type **recherche simple (SELECT SINGLE)** de Vitam en entrée et retourne une liste de Formats selon le DSL Vitam en cas de succès.
    is: [AdminTraits.AdminListingResponse]
    headers:
      X-Tenant-Id:
        required: true
      X-Access-Contract-Id:
        required: false
  post:
    description: |
      Requête qui retourne des résultats contenant des Formats si la requête utilise POST avec X-Http-Method-Override: GET.
      Si il n'y a pas de X-Http-Method-Override, la requête importe à partir d'un fichier PRONOM (see TNA) un nouveau référentiel.
    is: [AdminTraits.AdminListingResponse, StandardTraits.OverrideGet,
       AdminTraits.AdminUploadFormat, StandardTraits.UploadFileOptionalHeader]
    headers:
      X-Http-Method-Override:
        required: false
      X-Tenant-Id:
        required: true
      X-Access-Contract-Id:
        required: false

  /{idf}:
    uriParameters:
        idf:
          required: true
          description: |
            Identifiant du format
    displayName: FileFormat
    description: |
     API qui définit les requêtes pour accéder à un format dans le référentiel des Formats.
    get:
      description: Retourne une liste de Formats contenant 1 seul résultat en cas de succès.
      is: [AdminTraits.AdminItemResponse]
    headers:
      X-Tenant-Id:
        required: true
      X-Access-Contract-Id:
        required: false
    post:
      description: |
        Retourne une liste de Formats contenant 1 seul résultat en cas de succès. La requête utilise POST avec X-Http-Method-Override: GET
      is: [AdminTraits.AdminItemResponse, StandardTraits.OverrideGet]
      headers:
        X-Http-Method-Override:
          required: true
        X-Tenant-Id:
          required: true
        X-Access-Contract-Id:
          required: false

/formatsfilecheck:
  displayName: FileFormats check
  description: |
   API qui permet de vérifier que le fichier est correct, et peut être importé.
  post:
    description: |
      Vérifie si un fichier source PRONOM (see TNA) peut être importé comme nouveau Référentiel.
    is: [AdminTraits.AdminUpload]

/rules:
  displayName: Rules
  description: |
   API qui définit les requêtes pour accéder au référentiel des Règles de gestion.
   La requête utilise le langage de requête (DSL) de Vitam en entrée et retourne une liste de règles selon le DSL Vitam en cas de succès.
  get:
    description: |
      Requête qui retourne des résultats contenant des Règles de gestion.
      La requête utilise le langage de requête DSL de type **recherche simple (SELECT SINGLE)** de Vitam en entrée et retourne une liste de Règles de gestion selon le DSL Vitam en cas de succès.
    is: [AdminTraits.AdminListingResponse]
  post:
    description: |
      Requête qui retourne des résultats contenant des Règles de gestion si la requête utilise POST avec X-Http-Method-Override: GET.
      Si il n'y a pas de X-Http-Method-Override, la requête importe à partir d'un fichier CSV contenant les définitions des Règles de gestion un nouveau référentiel.
    is: [AdminTraits.AdminListingResponse, StandardTraits.OverrideGet, AdminTraits.AdminUploadRule, StandardTraits.UploadFileOptionalHeader]
    headers:
      X-Http-Method-Override:
        required: false
      X-Tenant-Id:
        required: true
      X-Access-Contract-Id:
        required: false

  /{idr}:
    displayName: Rule
    uriParameters:
        idr:
          required: true
          description: |
            Identifiant de la règle de gestion
    description: |
     API qui définit les requêtes pour accéder à une Règle dans le référentiel des Règles de gestion.
    get:
      description: |
        Retourne une liste de Règles de gestion contenant 1 seul résultat en cas de succès.
      is: [AdminTraits.AdminItemResponse]
    
    post:
      description: |
        Retourne une liste de Règles de gestion contenant 1 seul résultat en cas de succès. La requête utilise POST avec X-Http-Method-Override: GET
      is: [AdminTraits.AdminItemResponse, StandardTraits.OverrideGet]
      headers:
        X-Http-Method-Override:
          required: true
        X-Tenant-Id:
          required: true
        X-Access-Contract-Id:
          required: false

/rulesfilecheck:
  displayName: FileRules check
  description: |
   API qui permet de vérifier que le fichier est correct, et peut être importé.
  post:
    description: |
      Vérifie si un fichier source CSV contenant les définitions des Règles de gestion peut être importé comme nouveau Référentiel.
    is: [AdminTraits.AdminUpload]

/rulesreport/{idop}:
  displayName: Rules report
  uriParameters:
        idop:
          required: true
          description: |
            Identifiant de l'opération concernée
  description: |
     Permet de télécharger un objet représentant le rapport d'import des règles en fonction de l'id de l'opération
  is: [ AdminTraits.AdminFileItemResponse ]
  get:
     description:  |
      Permet de télécharger un objet représentant le rapport d'import des règles en fonction de l'id de l'opération
  post:
    description: |
      Requête qui permet de télécharger un objet représentant le rapport d'import des règles en fonction de l'id de l'opération. La requête utilise POST avec X-Http-Method-Override: GET
    is: [AdminTraits.AdminItemResponse, StandardTraits.OverrideGet]
    headers:
      X-Http-Method-Override:
        required: true

/preservationreport/{opId}:
  displayName: preservation report
  uriParameters:
        opId:
          required: true
          description: |
            Identifiant de l'opération concernée
  description: |
     Permet de télécharger un objet représentant le rapport de préservation en fonction de l'id de l'opération
  is: [ AdminTraits.AdminFileItemResponse ]
  get:
     description:  |
      Permet de télécharger un objet représentant le rapport de préservation en fonction de l'id de l'opération

/admin-external/v1/distributionreport/{opId}:
  displayName: Rapports de mise à jour de masse
  uriParameters:
    opId:
      required: true
      description: Identifiant de l'opération concernée
  description: Permet de rélécharger le rapport de mise à jour des unités archivistique en masse de l'id de l'opération
  is: [ AdminTraits.AdminFileItemResponse ]
  get:
    description: Permet de rélécharger le rapport de mise à jour des unités archivistique en masse de l'id de l'opération

/accessionregisters:
  displayName: AccessionRegisters
  description: |
   API qui définit les requêtes pour accéder au Registre des Fonds.
   La requête utilise le langage de requête (DSL) de Vitam en entrée et retourne une liste de registres selon le DSL Vitam en cas de succès.
  get:
    description: |
      Requête qui retourne des résultats contenant des Registres de Fonds.
      La requête utilise le langage de requête DSL de type **recherche simple (SELECT SINGLE)** de Vitam en entrée et retourne une liste de Registres de Fonds selon le DSL Vitam en cas de succès.
    is: [AdminTraits.AdminListingResponse]
  post:
    description: |
      Requête qui retourne des résultats contenant des Registres de Fonds. La requête utilise POST avec X-Http-Method-Override: GET.
      La requête utilise le langage de requête DSL de type **recherche simple (SELECT SINGLE)** de Vitam en entrée et retourne une liste de Registres de Fonds selon le DSL Vitam en cas de succès.
    is: [AdminTraits.AdminListingResponse, StandardTraits.OverrideGet]
    headers:
      X-Http-Method-Override:
        required: true

  /{idar}/accessionregisterdetails:
    displayName: AccessionRegisterDetail
    uriParameters:
      idar:
        required: true
        description: |
          Identifiant du registre des fonds
    description: |
      API qui définit les requêtes pour accéder au détail d'un Fond dans le Registre des Fonds.
    get:
      description: |
        Retourne une liste de Détails d'un Registre de Fonds contenant 1 seul résultat en cas de succès.
        La requête utilise le langage de requête DSL de type **recherche simple (SELECT SINGLE)** de Vitam en entrée.
      is: [AdminTraits.AdminListingResponse]
    post:
      description: |
        Retourne une liste de Détails d'un Registre de Fonds contenant 1 seul résultat en cas de succès. La requête utilise POST avec X-Http-Method-Override: GET.
        La requête utilise le langage de requête DSL de type **recherche simple (SELECT SINGLE)** de Vitam en entrée.
      is: [AdminTraits.AdminListingResponse, StandardTraits.OverrideGet]
      headers:
        X-Http-Method-Override:
          required: true

/accesscontracts:
  displayName: Access contracts
  description: |
     API qui définit les requêtes pour accéder aux contracs d'accès
     La requête utilise le langage de requête (DSL) de Vitam en entrée et retourne une liste de contrats d'accès selon le DSL Vitam en cas de succès.
  get:
    description: |
      Requête qui retourne des résultats contenant des Contrats d'accès.
      La requête utilise le langage de requête DSL de type **recherche simple (SELECT SINGLE)** de Vitam en entrée et retourne une liste de Contrats d'accès selon le DSL Vitam en cas de succès.
    is: [AdminTraits.AdminListingResponse]
    headers:
      X-Tenant-Id:
        required: true
      X-Access-Contract-Id:
        required: false
  post:
    description: |
      Requête qui retourne des résultats contenant des Contrats d'accès si la requête utilise POST avec X-Http-Method-Override: GET.
      Si il n'y a pas de X-Http-Method-Override, la requête importe un ensemble de contrats d'accès qui sont sauvegardés et indexés en cas de succès
    is: [AdminTraits.AdminListingResponse, StandardTraits.OverrideGet, AdminTraits.AdminUpload]
    headers:
      X-Http-Method-Override:
        required: false
      X-Tenant-Id:
        required: true
      X-Access-Contract-Id:
        required: false

  /{idac}:
    uriParameters:
        idac:
          required: true
          description: |
            Identifiant du contrat d'accès
    displayName: Access contract
    description: |
     API qui permet de mettre à jour un contrat d'accès via une requête de mise à jour ou d'accéder à un contrat d'accès
    get:
      description: |
         Retourne une liste de Contrats d'accès contenant 1 seul résultat en cas de succès.
      is: [AdminTraits.AdminListingResponse]
      headers:
        X-Tenant-Id:
          required: true
        X-Access-Contract-Id:
          required: false
    put:
      description: |
        Requête qui modifie un Contrat d'accès.
        La requête utilise le langage de requête DSL de type **modification unitaire (UPDATE BY ID)** de Vitam en entrée et retourne le statut de la mise à jour en résultat selon le DSL Vitam en cas de succès.
      is: [AdminTraits.AdminUpdate]
      headers:
        X-Tenant-Id:
          required: true
        X-Access-Contract-Id:
          required: false

/ingestcontracts:
  displayName: Ingest contracts
  description: |
     API qui définit les requêtes pour accéder aux contrats d'entrée
     La requête utilise le langage de requête (DSL) de Vitam en entrée et retourne une liste de contrats d'entrée selon le DSL Vitam en cas de succès.
  get:
    description: |
      Requête qui retourne des résultats contenant des Contrats d'entrée.
      La requête utilise le langage de requête DSL de type **recherche simple (SELECT SINGLE)** de Vitam en entrée et retourne une liste de Contrats d'entrée selon le DSL Vitam en cas de succès.
    is: [AdminTraits.AdminListingResponse]
    headers:
      X-Tenant-Id:
        required: true
      X-Access-Contract-Id:
        required: false
  post:
    description: |
      Requête qui retourne des résultats contenant des Contrats d'entrée si la requête utilise POST avec X-Http-Method-Override: GET.
      Si il n'y a pas de X-Http-Method-Override, la requête importe un ensemble de contrats d'entrée qui sont sauvegardés et indexés en cas de succès
    is: [AdminTraits.AdminListingResponse, StandardTraits.OverrideGet, AdminTraits.AdminUpload]
    headers:
      X-Http-Method-Override:
        required: false
      X-Tenant-Id:
        required: true
      X-Access-Contract-Id:
        required: false

  /{idic}:
    uriParameters:
        idic:
          required: true
          description: |
            Identifiant du contrat d'entrée
    displayName: Ingest Contract
    description: |
      API qui permet de mettre à jour un contrat d'entrée via une requête de mise à jour ou d'accéder à un contrat d'entrée
    get:
      description: |
        Retourne une liste de Contrats d'entrée contenant 1 seul résultat en cas de succès.
      is: [AdminTraits.AdminListingResponse]
      X-Tenant-Id:
        required: true
      X-Access-Contract-Id:
        required: false
    put:
       description: |
        Requête qui modifie un Contrat d'entrée.
        La requête utilise le langage de requête DSL de type **modification unitaire (UPDATE BY ID)** de Vitam en entrée et retourne le statut de la mise à jour en résultat selon le DSL Vitam en cas de succès.
       is: [AdminTraits.AdminUpdate]
      X-Tenant-Id:
        required: true
      X-Access-Contract-Id:
        required: false

/managementcontracts:
  displayName: Management contracts
  description: |
     API qui définit les requêtes pour accéder aux contrats de gestion
     La requête utilise le langage de requête (DSL) de Vitam en entrée et retourne une liste de contrats de gestion selon le DSL Vitam en cas de succès.
  get:
    description: |
      Requête qui retourne des résultats contenant des Contrats de gestion.
      La requête utilise le langage de requête DSL de type **recherche simple (SELECT SINGLE)** de Vitam en entrée et retourne une liste de Contrats de gestion selon le DSL Vitam en cas de succès.
    is: [AdminTraits.AdminListingResponse]
    headers:
      X-Tenant-Id:
        required: true
      X-Access-Contract-Id:
        required: false
  post:
    description: |
      Requête qui retourne des résultats contenant des Contrats de gestion si la requête utilise POST avec X-Http-Method-Override: GET.
      Si il n'y a pas de X-Http-Method-Override, la requête importe un ensemble de contrats de gestion qui sont sauvegardés et indexés en cas de succès
    is: [AdminTraits.AdminListingResponse, StandardTraits.OverrideGet, AdminTraits.AdminUpload]
    headers:
      X-Http-Method-Override:
        required: false
      X-Tenant-Id:
        required: true
      X-Access-Contract-Id:
        required: false

  /{idic}:
    uriParameters:
        idic:
          required: true
          description: |
            Identifiant du contrat de gestion
    displayName: Management Contract
    description: |
      API qui permet de mettre à jour un contrat de gestion via une requête de mise à jour ou d'accéder à un contrat de gestion
    get:
      description: |
        Retourne une liste de Contrats de gestion contenant 1 seul résultat en cas de succès.
      is: [AdminTraits.AdminListingResponse]
      headers:
        X-Tenant-Id:
          required: true
        X-Access-Contract-Id:
          required: false
    put:
       description: |
        Requête qui modifie un Contrat de gestion.
        La requête utilise le langage de requête DSL de type **modification unitaire (UPDATE BY ID)** de Vitam en entrée et retourne le statut de la mise à jour en résultat selon le DSL Vitam en cas de succès.
       is: [AdminTraits.AdminUpdate]
       headers:
          X-Tenant-Id:
            required: true
          X-Access-Contract-Id:
            required: false

/contexts:
  displayName: Contexts
  description: |
     API qui définit les requêtes pour accéder aux contextes d'applications externes
     La requête utilise le langage de requête (DSL) de Vitam en entrée et retourne une liste de contextes selon le DSL Vitam en cas de succès.
  get:
    description: |
      Requête qui retourne des résultats contenant des Contextes.
      La requête utilise le langage de requête DSL de type **recherche simple (SELECT SINGLE)** de Vitam en entrée et retourne une liste de Contextes selon le DSL Vitam en cas de succès.
    is: [AdminTraits.AdminListingResponse]
    headers:
      X-Tenant-Id:
        required: true
      X-Access-Contract-Id:
        required: false
  post:
    description: |
      Requête qui retourne des résultats contenant des Contextes si la requête utilise POST avec X-Http-Method-Override: GET.
      Si il n'y a pas de X-Http-Method-Override, la requête importe un ensemble de contextes qui sont sauvegardés et indexés en cas de succès
    is: [AdminTraits.AdminListingResponse, StandardTraits.OverrideGet, AdminTraits.AdminUpload]
    headers:
      X-Http-Method-Override:
        required: false
      X-Tenant-Id:
        required: true
      X-Access-Contract-Id:
        required: false

  /{idc}:
    uriParameters:
        idc:
          required: true
          description: |
            Identifiant du contexte
    displayName: Context
    description: |
      API qui permet de mettre à jour un contexte via une requête de mise à jour ou d'accéder à un contexte
    get:
      description: |
         Retourne une liste de Contexte contenant 1 seul résultat en cas de succès.
      is: [AdminTraits.AdminListingResponse]
      headers:
      X-Tenant-Id:
        required: true
      X-Access-Contract-Id:
        required: false
    put:
       description: |
        Requête qui modifie un Contexte.
        La requête utilise le langage de requête DSL de type **modification unitaire (UPDATE BY ID)** de Vitam en entrée et retourne le statut de la mise à jour en résultat selon le DSL Vitam en cas de succès.
       is: [AdminTraits.AdminUpload]
      headers:
      X-Tenant-Id:
        required: true
      X-Access-Contract-Id:
        required: false

/profiles:
  displayName: Profiles
  description: |
    API qui définit les requêtes pour accéder aux profils
    La requête utilise le langage de requête (DSL) de Vitam en entrée et retourne une liste de profils selon le DSL Vitam en cas de succès.
  get:
    description: |
      Requête qui retourne des résultats contenant des Profils.
      La requête utilise le langage de requête DSL de type **recherche simple (SELECT SINGLE)** de Vitam en entrée et retourne une liste de Profils selon le DSL Vitam en cas de succès.
    is: [AdminTraits.AdminListingResponse]
    headers:
      X-Tenant-Id:
        required: true
      X-Access-Contract-Id:
        required: false
  post:
    description: |
      Requête qui retourne des résultats contenant des Profils si la requête utilise POST avec X-Http-Method-Override: GET.
      Dans ce cas la requête doit être au format DSL SELECT SINGLE (Voir DSL API documentation).
      Sinon, le Content-Type est requis et la requête attend un json en entrée et importe un ensemble de profils qui sont sauvegardés et indexés en cas de succès.
      L'exemple montre le format du JSON pour l'import de référentiels.
    is: [AdminTraits.AdminItemResponse, StandardTraits.OverrideGet, AdminTraits.AdminUpload]
    headers:
      X-Http-Method-Override:
        description: Requis pour effectuer un GET avec une requête json en body.
        required: false
      headers:
      X-Tenant-Id:
        required: true
      X-Access-Contract-Id:
        required: false
      Content-Type:
        description: Requis pour importer des profils.
        required: false
        enum: [ "application/json", "application/octet-stream" ]
    body:
      application/json:
        description: Requête permettant d'importer un ou plusieurs profiles
        example: !include libraries/examples/profiles-import.json

  /{idp}:
    uriParameters:
        idp:
          required: true
          description: |
            Identifiant du profil
    displayName: Profil
    description: |
      API qui permet de mettre à jour un profil via une requête de mise à jour ou d'accéder à un profil
    get:
      description: |
         Permet de faire une requête par identifiant sur un profile si la requête attend application/json. L'identifiant du profile est la chaîne "idp" dans l'URL.
         Si la requête attend application/octet-stream en réponse, VITAM renvoie alors le fichier XSD ou RNG lié au profile.
      is: [AdminTraits.AdminListingResponse, AdminTraits.AdminFileItemResponse]
      headers:
        Accept:
          description: Spécifie la réponse attendue. 'json' pour les métadonénes du profile, 'octet-stream' pour le fichier XSD ou RNG lié.
          required: true
          enum: [ "application/json", "application/octet-stream" ]
      X-Tenant-Id:
        required: true
      X-Access-Contract-Id:
        required: false
    put:
       description: |
        Requête qui modifie les métadonnées d'un profil si la requête envoie un json (Content-Type = application/json).
        Dans ce cas, la requête utilise le langage de requête DSL de type **modification unitaire (UPDATE BY ID)** de Vitam en entrée et retourne le statut de la mise à jour en résultat selon le DSL Vitam en cas de succès.
        Sinon, la requête doit spécifier le Content-Type comme application/octet-stream. Dans ce cas, elle permet de mettre à jour le fichier RNG ou XSD lié.
       is: [AdminTraits.AdminUpload, AdminTraits.AdminProfileUpload]
       headers:
         Content-Type:
           description: Requis pour importer des profils.
           required: false
           enum: [ "application/json", "application/octet-stream" ]
          X-Tenant-Id:
            required: true
          X-Access-Contract-Id:
            required: false

/griffin:
  displayName: griffons
  description: Téléverser le référentiel des griffon
  get:
    description: Permet de télécharger le référentiel des griffons
    is: [AdminTraits.AdminListingResponse]
    headers:
      X-Tenant-Id:
        required: true
      X-Access-Contract-Id:
        required: false
  post:
    description: Téléverse le référentiel des griffons ou annule et remplace les référentiels existant
    is: [AdminTraits.AdminListingResponse, AdminTraits.AdminUpload]
    headers:
      X-Tenant-Id:
        required: true
      X-Access-Contract-Id:
        required: false
  /{id_document}:
    uriParameters:
      id_document:
        required: true
        description: Identifiant du griffon
    displayName: griffons
    description: API qui permet de télécharger un griffon via l'identifiant du document
    get:
      description: |
        Permet de faire une requête par identifiant sur un griffon.
        L'identifiant du griffon est la chaîne "id_document" dans l'URL.
        la requête renvoie alors le griffon au format json.
      is: [AdminTraits.AdminListingResponse]
      headers:
      X-Tenant-Id:
        required: true
      X-Access-Contract-Id:
        required: false

/preservationScenario:
  displayName: scénario de préservation
  description: Télécharger le référentiel des scénario de préservation
  get:
    description: Permet de télécharger le référentiel des scénario de préservation
    is: [AdminTraits.AdminListingResponse]
    headers:
      X-Tenant-Id:
        required: true
      X-Access-Contract-Id:
        required: false
  post:
    description: Téléverse le référentiel des scénarios de préservation ou annule et remplace les référentiels existant
    is: [AdminTraits.AdminListingResponse, AdminTraits.AdminUpload]
    headers:
      X-Tenant-Id:
        required: true
      X-Access-Contract-Id:
        required: false

  /{id_document}:
    uriParameters:
      id_document:
        required: true
        description: Identifiant du scénario de préservation
    displayName: scénario de préservation
    description: API qui permet de télécharger un scénario de préservation via l'identifiant du document
    get:
      description: |
        Permet de faire une requête par identifiant sur un scénario de préservation.
        L'identifiant du scénario de préservation est la chaîne "id_document" dans l'URL.
        la requête renvoie alors le scénario de préservation au format json.
      is: [AdminTraits.AdminListingResponse]
      headers:
        X-Tenant-Id:
          required: true
        X-Access-Contract-Id:
          required: false

/archiveunitprofiles:
  displayName: Document Types
  description: |
    API qui définit les requêtes pour accéder aux document types
    La requête utilise le langage de requête (DSL) de Vitam en entrée et retourne une liste de document types selon le DSL Vitam en cas de succès.
  get:
    description: |
      Requête qui retourne des résultats contenant des Document types.
      La requête utilise le langage de requête DSL de type **recherche simple (SELECT SINGLE - Voir DSL API Documentation)** de Vitam en entrée et retourne une liste de Document types selon le DSL Vitam en cas de succès.
    is: [AdminTraits.AdminListingResponse]
    headers:
      X-Tenant-Id:
        required: true
      X-Access-Contract-Id:
        required: false
  post:
    description: |
      Requête qui retourne des résultats contenant des Document types si la requête utilise POST avec X-Http-Method-Override: GET.
      Dans ce cas la requête doit être au format DSL SELECT SINGLE (Voir DSL API documentation).
      Sinon, le Content-Type est requis et la requête attend un json en entrée et importe un ensemble de Document types qui sont sauvegardés et indexés en cas de succès.
      L'exemple montre le format du JSON pour l'import de référentiels.
    is: [AdminTraits.AdminItemResponse, StandardTraits.OverrideGet, AdminTraits.AdminUpload]
    headers:
      X-Http-Method-Override:
        description: Requis pour effectuer un GET avec une requête json en body.
        required: false      
      X-Tenant-Id:
        required: true
      X-Access-Contract-Id:
        required: false
      Content-Type:
        description: Requis pour importer des document types.
        required: false
        enum: [ "application/json", "application/octet-stream" ]
    body:
      application/json:
        description: Requête permettant d'importer un ou plusieurs document types
        example: !include libraries/examples/archive-unit-profiles-import.json

  /{idp}:
    uriParameters:
        idp:
          required: true
          description: |
            Identifiant du document type
    displayName: Archive Unit Profile
    description: |
      API qui permet de mettre à jour un document type via une requête de mise à jour ou d'accéder à un document type
    get:
      description: |
         API qui définit les requêtes pour accéder à un document type via son ID
      is: [AdminTraits.AdminListingResponse, AdminTraits.AdminItemResponse]
      headers:
        X-Tenant-Id:
          required: true
        X-Access-Contract-Id:
          required: false
    put:
      description: |
        Requête qui modifie un Document type.
        La requête utilise le langage de requête DSL de type **modification unitaire (UPDATE BY ID)** de Vitam en entrée et retourne le statut de la mise à jour en résultat selon le DSL Vitam en cas de succès.
      is: [AdminTraits.AdminUpload]
      headers:
        X-Tenant-Id:
          required: true
        X-Access-Contract-Id:
          required: false

/securityprofiles:
  displayName: Security Profiles
  description: |
     API qui définit les requêtes pour accéder aux Profils de Sécurité.
     La requête utilise le langage de requête (DSL) de Vitam en entrée et retourne une liste de profils de sécurité selon le DSL Vitam en cas de succès.
  get:
    description: |
      Requête qui retourne des résultats contenant des Profils de sécurité.
      La requête utilise le langage de requête DSL de type **recherche simple (SELECT SINGLE)** de Vitam en entrée et retourne une liste de Profils de sécurité selon le DSL Vitam en cas de succès.
    is: [AdminTraits.AdminListingResponse]
    headers:
      X-Tenant-Id:
        required: true
      X-Access-Contract-Id:
        required: false
  post:
    description: |
      Requête qui retourne des résultats contenant des Profils de sécurité si la requête utilise POST avec X-Http-Method-Override: GET.
      Si il n'y a pas de X-Http-Method-Override, la requête importe un nouveau Profil de sécurité.
    is: [AdminTraits.AdminListingResponse, StandardTraits.OverrideGet, AdminTraits.AdminUpload]
    headers:
      X-Http-Method-Override:
        required: false
      X-Tenant-Id:
        required: true
      X-Access-Contract-Id:
        required: false

  /{identifier}:
    uriParameters:
        identifier:
          required: true
          description: |
            Identifiant du profil de sécurité
    displayName: Security Profiles
    description: |
     API qui permet de mettre à jour un profil de sécurité via une requête de mise à jour ou d'accéder à un profil de sécurité
    get:
      description: |
        Retourne une liste de Profils de sécurité contenant 1 seul résultat en cas de succès.
      is: [AdminTraits.AdminItemResponse]
    headers:
      X-Tenant-Id:
        required: true
      X-Access-Contract-Id:
        required: false
    put:
       description: |
        Requête qui modifie un Profil de sécurité.
        La requête utilise le langage de requête DSL de type **modification unitaire (UPDATE BY ID)** de Vitam en entrée et retourne le statut de la mise à jour en résultat selon le DSL Vitam en cas de succès.
       is: [AdminTraits.AdminUpload]
      headers:
        X-Tenant-Id:
          required: true
        X-Access-Contract-Id:
          required: false
    post:
      description: |
        Retourne une liste de Profils de sécurité contenant 1 seul résultat en cas de succès. La requête utilise POST avec X-Http-Method-Override: GET.
      is: [AdminTraits.AdminItemResponse, StandardTraits.OverrideGet]
      headers:
        X-Http-Method-Override:
          required: true
        X-Tenant-Id:
          required: true
        X-Access-Contract-Id:
          required: false

/agencies:
  displayName: Agencies
  description: |
   API qui définit les requêtes pour accéder au référentiel des Agencies.
   La requête utilise le langage de requête (DSL) de Vitam en entrée et retourne une liste d'agencies selon le DSL Vitam en cas de succès.
  get:
    description: |
      Requête qui retourne des résultats contenant des Agencies.
      La requête utilise le langage de requête DSL de type **recherche simple (SELECT SINGLE)** de Vitam en entrée et retourne une liste d'Agencies selon le DSL Vitam en cas de succès.
    is: [AdminTraits.AdminListingResponse]
    headers:
      X-Tenant-Id:
        required: true
      X-Access-Contract-Id:
        required: false
  post:
    description: |
      Request that will return results composed of Agencies si la requête utilise POST avec X-Http-Method-Override: GET.
      Si il n'y a pas de X-Http-Method-Override, la requête importe un nouveau Référentiel d'Agencies.
    is: [AdminTraits.AdminListingResponse, StandardTraits.OverrideGet,
       AdminTraits.AdminUpload, StandardTraits.UploadFileOptionalHeader]
    headers:
      X-Http-Method-Override:
        required: false
      X-Tenant-Id:
        required: true
      X-Access-Contract-Id:
        required: false

  /{ida}:
    uriParameters:
        ida:
          required: true
          description: |
            Identifiant de l'agency
    displayName: Agency
    description: |
     API qui définit les requêtes pour accéder à un Agency dans le référentiel des Agencies.
    get:
      description: |
        Retourne une liste d'Agencies contenant 1 seul résultat en cas de succès.
      is: [AdminTraits.AdminItemResponse]
      headers:
        X-Tenant-Id:
          required: true
        X-Access-Contract-Id:
          required: false
    post:
      description: |
        Retourne une liste d'Agencies contenant 1 seul résultat en cas de succès. La requête utilise POST avec X-Http-Method-Override: GET.
      is: [AdminTraits.AdminItemResponse, StandardTraits.OverrideGet]
      headers:
        X-Http-Method-Override:
          required: true
        X-Tenant-Id:
          required: true
        X-Access-Contract-Id:
          required: false

/agenciesfilecheck:
  displayName: FileAgencies check
  description: |
   API qui permet de vérifier que le fichier est correct, et peut être importé.
  post:
    description: |
      Vérifie si un fichier source Agencies (see TNA) peut être importé comme nouveau Référentiel.
    is: [AdminTraits.AdminUpload]

/operations:
  # root endpoint request
  displayName: Operations
  description: |
    Administration des Workflows Asynchrones (opérations). Certaines opérations devraient être limitées aux seuls administrateurs car elles impactent le back-office.
  is: [ StandardTraits.StandardOptionalHeader,
  StandardTraits.StandardHeader401, StandardTraits.StandardHeader404,
  StandardTraits.StandardHeader409, StandardTraits.StandardHeader412 ]
  get:
    description: |
      Requête qui retourne des résultats contenant des opérations.
    is: [IngestTraits.IngestListingResponse ]

  /{idop}:
    uriParameters:
        idop:
          required: true
          description: |
            Identifiant de l'opération
    displayName: Operation
    is: [ StandardTraits.StandardOptionalHeader,
    StandardTraits.StandardHeader401, StandardTraits.StandardHeader404,
    StandardTraits.StandardHeader409, StandardTraits.StandardHeader412 ]
    get:
      description:  |
        Permet de récupérer le statut de l'opération dont l'identifiant est passée en paramètre
    put:
      description: |
       Permet de mettre à jour une opération lancée en précisant l'action à exécuter dans le header X-Action-Id; PAUSE pour la mettre en pause,
       NEXT pour exécuter l'étape suivante, RESUME pour continuer l'exécution de l'opération jusqu'au bout.
       **Cette opération ne devrait être ouverte qu'aux administrateurs**
      headers:
        X-Action:
          required: true
          description: |
            Permet d'influer sur le workflow. RESUME permet de poursuivre le workflow jusqu'à la fin. NEXT permet d'exécuter la prochaine étape pour ensuite se mettre en pause. PAUSE permet de demander la mise en pause du workflow à la fin de l'étape en cours. REPLAY permet de rejouer la dernière étape exécutée.
          enum: [ "RESUME", "NEXT", "PAUSE", "REPLAY" ]

    delete:
     description: |
       Permet d'annuler un workflow lancé.
       **Cette opération ne devrait être ouverte qu'aux administrateurs**
    head:
      description: |
        Permet d'obtenir le statut d'une opération
      responses:
       200:
         description: |
           L'opération existe et est terminé, le statut est retourné
       202:
         description: |
           L'opération existe mais n'est pas terminée
       404:
         description: |
           Opération introuvable

/workflows:
  # root endpoint request
  displayName: Workflows
  description: |
    Gestion des définitions des Workflows disponibles.

  is: [ StandardTraits.StandardOptionalHeader,
    StandardTraits.StandardHeader401, StandardTraits.StandardHeader404,
    StandardTraits.StandardHeader409, StandardTraits.StandardHeader412 ]
  get:
    description: |
      Requête qui retourne des résultats contenant des définitions de workflow.
    is: [IngestTraits.IngestWorkflowsResponse ]

/audits:
  # root endpoint request
  displayName: Audits
  description: |
    API d'audits (Ingest). Ce point d'entrée permet de créer une opération d'audit.
    Une opération d'audit est volatile, c'est à dire qu'elle disparaîtra dès qu'elle sera terminée.
    Sa terminaison est liée à la production du rapport et sa récupération par le service ayant effectué l'opération.

  is: [ StandardTraits.StandardOptionalHeader,
    StandardTraits.StandardHeader401, StandardTraits.StandardHeader404,
    StandardTraits.StandardHeader409, StandardTraits.StandardHeader412 ]
  post:
    description: |
        response : JSON asynchronous state / HTTP CODE 200 or  500 for KO
    is: [AdminTraits.AuditCreationResponseAsync]

/traceability:
  displayName: Traceability
  description: |
    API de sécurisation des journaux. Ce point d'entrée permet de vérifier et télécharger une opération de sécurisation des journaux
  /{idop}/datafiles:
    displayName: Téléchargement de la sécurisation des journaux
    uriParameters:
          idop:
            required: true
            description: |
              Identifiant de l'opération concernée
    description: |
       Permet de télécharger un objet représentant la sécurisation des journaux d'opérations
    is: [ AdminTraits.AdminFileItemResponse ]
    get:
       description:  |
        Permet de télécharger un objet représentant la sécurisation des journaux d'opérations en fonction de l'identificant de l'opération à l'origine.

/traceabilitychecks:
  displayName: Vérification de la sécurisation des journaux
  description: |
    Permet de lancer un processus de vérification d'une opération de sécurisation
  post:
    description: |
      response : JSON asynchronous state / HTTP CODE 200 or  500 for KO
      La requête utilise le langage de requête DSL de type **recherche simple (SELECT SINGLE)** de Vitam en entrée.
    is: [AdminTraits.TraceabilityCheckResponseAsync]

/reclassification:
  displayName: Mise à jour d'arborescence
  description: API qui définit les requêtes liées à la mise à jour d'arborescence des unités archivistiques
  is: [ StandardTraits.StandardOptionalHeader ]
  post:
    headers:
      Accept:
        required: true
        enum: [ "application/json" ]
      Content-Type:
        required: true
        enum: [ "application/json" ]
    description: Lancement d'une ou plusieurs modifications d'arborescence d'unité archivistiques
    body:
      application/json:
        description: |
          Requête spécifiant les unités archivistiques à déplacer dans l'arborescence (ajout/suppression de parents - Tableau de DSL au format RECLASSIFICATION_QUERY).
          Chaque DSL utilise des mots clés spécifique dans la partie $action et cible une ou plusieurs unités archivistiques parents dans la partie $query.
          L'opérateur $add permet d'ajouter un parent à l'unité archivistique ciblée. L'opérateur $pull permet de retirer un parent à l'unité archivistique cible.
          Seul le champs #unitups doit être modifié grâce à cette requête.
        type: array
        example: !include libraries/examples/reclassification.json
    responses:
      202:
        description: Succès

/probativevalueexport:
  displayName: Valeur Probante
  description: API permettant d'exporter des relevé de valeur probante
  is: [ StandardTraits.StandardOptionalHeader ]
  post:
    headers:
      Accept:
        required: true
        enum: [ "application/json" ]
      Content-Type:
        required: true
        enum: [ "application/json" ]
    description: Lancement d'un export du relevé de valeur probante
    body:
      application/json:
        description: |
          Requête ...
        type: object
        properties:
          dslQuery:
            description: Requête DSL de sélection des éléments à exporter
            type: object
            example: !include libraries/examples/dslQuery.json
          usage:
            description: Usages cibles
            type: string[]
          version:
            description: version cible (nombre ou "LAST"). Non modifiable ? LAST ?
            type: string
        example: !include libraries/examples/probative-value-export.json
    responses:
      202:
        description: Succès
        body:
          application/json:
            description: Success response
      412:
        description: Precondition Failed
        body:
          application/json:
            description: some predicates are incorrect, therefore the operation is not possible.

/rectificationaudit:
  displayName: Audit rectificatif
  description: API permettant de corriger les erreurs remontés lors de l'audit de cohérence
  is: [ StandardTraits.StandardOptionalHeader ]
  post:
    headers:
      Accept:
        required: true
        enum: [ "application/json" ]
      Content-Type:
        required: true
        enum: [ "application/json" ]
    description: Lancement d'un correctif d'audit
    body:
      application/json:
        description: Identifiant de l'opération d'audit de cohérance
        type: string
        example: !include libraries/examples/rectification-audit.json
    responses:
      202:
        description: Succès
        body:
          application/json:
            description: Success response
      412:
        description: Precondition Failed
        body:
          application/json:
            description: some predicates are incorrect, therefore the operation is not possible.

/evidenceaudit/:
  displayName: Audit de cohérence
  description: API qui définit les requêtes pour générer un audit de cohérence.
  is: [ StandardTraits.StandardOptionalHeader ]
  post:
    headers:
      Accept:
        required: true
        enum: [ "application/json" ]
      Content-Type:
        required: true
        enum: [ "application/json" ]
    description: Lancement d'une opération d'audit de cohérence
    body:
      application/json:
        description: Requête DSL de sélection d'unité archivistique
        type: object
        examples: 
          -audit-aus: !include libraries/examples/evidenceAuditQuery.json
          -audit-opi: !include libraries/examples/evidenceAuditQueryOp.json
          -audit-tenant: !include libraries/examples/evidenceAuditQueryTenant.json
    responses:
      202:
        description: Succès
        body:
          application/json:
            description: Success response
      412:
        description: Precondition Failed
        body:
          application/json:
            description: some predicates are incorrect, therefore the operation is not possible.
      400:
        description: Precondition Failed
        body:
          application/json:
            description: some predicates are incorrect, DSL Query is not valid.

/rulesreferential/{opId}:
  displayName: Référentiel des rêgles de gestion
  uriParameters:
        opId:
          required: true
          description: |
            Identifiant de l'opération
  description: |
   API qui permet de récupérer le fichier original des rêgles de gestion sous forme de csv
  get:
      headers:
        Accept:
          required: true
          enum: [ "application/octet-stream" ]
      description: |
        Récupére le fichier original des rêgles de gestion sous forme de csv à partir de l'id de l'opération
      responses:
        202:
          description: Returns the csv file
          body:
            application/octet-stream:
              description: Binary object as a csv file
        404:
          description: Not found, operation could not be found, or csv file attached does not exist
          body:
            application/json:
        412:
          description: Precondition Failed, some predicates are incorrect, therefore the operation is not possible
          body:
            application/json:

/agenciesreferential/{opId}:
  displayName: Référentiel des services agents
  uriParameters:
        opId:
          required: true
          description: |
            Identifiant de l'opération
  description: |
   API qui permet de récupérer le fichier original des services agents sous forme de csv
  get:
      headers:
        Accept:
          required: true
          enum: [ "application/octet-stream" ]
      description: |
        Récupére le fichier original des services agents sous forme de csv à partir de l'id de l'opération
      responses:
        202:
          description: Returns the csv file
          body:
            application/octet-stream:
              description: Binary object as a csv file
        404:
          description: Not found, operation could not be found, or csv file attached does not exist
          body:
            application/json:
        412:
          description: Precondition Failed, some predicates are incorrect, therefore the operation is not possible
          body:
            application/json:

/ontologies:
  displayName: Ontologies
  description: |
   API qui définit les requêtes pour accéder au référentiel des Ontologies.
   La requête utilise le langage de requête (DSL) de Vitam en entrée et retourne une liste d'ontologies selon le DSL Vitam en cas de succès.
  get:
    description: |
      Requête qui retourne des résultats contenant des Agencies.
      La requête utilise le langage de requête DSL de type **recherche simple (SELECT SINGLE)** de Vitam en entrée et retourne une liste d'Ontologies selon le DSL Vitam en cas de succès.
    is: [AdminTraits.AdminListingResponse]
    headers:
      X-Tenant-Id:
        required: true
      X-Access-Contract-Id:
        required: false
  post:
    description: |
      Requête qui retourne des résultats contenant des Ontologies si la requête utilise POST avec X-Http-Method-Override: GET.
      Si il n'y a pas de X-Http-Method-Override, la requête importe un nouveau Référentiel d'Ontologies.
    is: [AdminTraits.AdminListingResponse, StandardTraits.OverrideGet,
       AdminTraits.AdminUpload, StandardTraits.UploadFileOptionalHeader]
    headers:
      X-Http-Method-Override:
        required: false
      X-Tenant-Id:
        required: true
      X-Access-Contract-Id:
        required: false
      Force-Update:
        description:  |
          Permet de forcer l'import de l'ontologie en ignorant les contrôles de cohérence (changement de typage incompatibles avec l'ontologie actuelle, suppression de champs d'ontologie internes...).
          Valeurs possibles : **true** et **false**.
        required: false

  /{ido}:
    uriParameters:
        ido:
          required: true
          description: |
            Identifiant de l'ontologie
    displayName: Ontologie
    description: |
     API qui définit les requêtes pour accéder à une ontologie dans le référentiel des Ontologies.
    get:
      description: |
        Retourne une liste d'Ontologies contenant 1 seul résultat en cas de succès.
      is: [AdminTraits.AdminItemResponse]
      headers:
        X-Tenant-Id:
          required: true
        X-Access-Contract-Id:
          required: false
    post:
      description: |
        Retourne une liste d'Ontologies contenant 1 seul résultat en cas de succès. La requête utilise POST avec X-Http-Method-Override: GET.
      is: [AdminTraits.AdminItemResponse, StandardTraits.OverrideGet]
      headers:
        X-Http-Method-Override:
          required: true
        X-Tenant-Id:
          required: true
        X-Access-Contract-Id:
          required: false

/forcepause:
  displayName: Alpha - Pause Process
  description: Force new operations to pause. This is alpha endpoint
  is: [ StandardTraits.StandardOptionalHeader ]
  post:
    description: pause operations on a given tenant and/or type
    body:
      application/json:
        description: Parameters for precess pause. At least one of the following parameters MUST be filled with no-null value.
        type: object
        properties:
          type:
            description: operation type to be paused. null value mean "all types". Should be one of LogbookTypeProcess.java value.
            type: string
          tenant:
            description: operation tenant to be paused. null value mean "all tenants".
            type: number
          pauseAll:
            description: force pause for all operation and tenants. Must be "true" to force all pause. Override potential values of tenant/type in this request.
            type: boolean
        example: !include libraries/examples/forcepause-query.json

/removeforcepause:
  displayName: Alpha - Remove Pause on Precess
  description: Remove the "Must pause" on operations. This is alpha endpoint
  is: [ StandardTraits.StandardOptionalHeader ]
  post:
    description: Remove "Must Pause" for operations on a given tenant and/or type
    body:
      application/json:
        description: Parameters for precess pause. At least one of the following parameters MUST be filled with no-null value.
        type: object
        properties:
          type:
            description: operation type to be unpaused. null value mean "all types". Should be one of LogbookTypeProcess.java value.
            type: string
          tenant:
            description: operation tenant to be unpaused. null value mean "all tenants".
            type: number
          pauseAll:
            description: remove pause for all operation and tenants. Must be "false" in order to remove all pause. Override potential values of tenant/type in this request.
            type: boolean
        example: !include libraries/examples/forcepause-query.json

/accessionregisterssymbolic:
  displayName: Registres de fonds symboliques
  description: API sur les registres de fonds symboliques.
  is: [ StandardTraits.StandardOptionalHeader ]
  get:
    description: Recherche sur les registres de fonds symboliques grâce à la requête donnée en entrée
    headers:
      Accept:
        required: true
        enum: [ "application/json" ]
      Content-Type:
        required: true
        enum: [ "application/json" ]
    body:
      application/json:
        description: Requête DSL de type **recherche simple (SELECT SINGLE)** de VITAM.
        example: !include libraries/examples/dslQuery.json

/logbookoperations:
  displayName: Beta - Journalisation externe
  description: |
    API permettant d'intégrer des journaux d'opération externes.
  is: [ StandardTraits.StandardOptionalHeader ]
  post:
    description: Beta - Requête qui insère une opération externe dans le journal des opérations
    body:
      application/json:
        description: |
            Requête qui insère une opération externe dans le journal des opérations. Endpoint en version Beta.

            Spécificités :
              - Le champ eventType du master doit respecter la regle "EXT_*"
              - Le champ evTypeProc doit prendre comme valeur "EXTERNAL_LOGBOOK"
              - Seules les valeurs "agIdExt" et "objectIdentifierIncome" seront conservées dans le master, les autres valeurs seront surchargées par Vitam.
        type: object
        example: !include libraries/examples/Logbook.json
        required: true
    responses:
      201:
        description: L'opération a bien été créée dans VITAM
      400:
        description: L'opération n'est pas au format exigé. Ou alors la valeur des champs eventTypeProcess ou eventType est incorrecte  eventTypeProcess doit avoir pour valeur "EXTERNAL", eventType doit commencer par "EXT_".
      409:
        description: L'opération existe déjà
      500:
        description: Internal Server Error, le serveur a rencontré une erreur
/:
  displayName: Endpoints
  description: |
   API qui liste les endpoints de la ressource /admin-external/{version}.
  options:
    description: |
      Request that will return list of endpoints
    is: [ StandardTraits.StandardHeader200,
      StandardTraits.StandardHeader404, StandardTraits.StandardHeader503 ]


/status:
  get:
    is: [ StandardTraits.StandardHeader204,
      StandardTraits.StandardHeader401, StandardTraits.StandardHeader404, StandardTraits.StandardHeader503 ]
